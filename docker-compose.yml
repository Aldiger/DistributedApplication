services:
  vote:
    build: ./vote
    # use python rather than gunicorn for local deve
    command: python app.py
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl","-f","http://localhost"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    volumes:
      - ./vote:/app
    ports:
      - "5005:80"
    # networks:
    #   - front-tier
    #   - back-tier
  
  redis:
    image: redis:alpine
    volumes:
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/redis.sh
      interval: 5s
    # networks:
    #   - back-tier
    ports:
      - 6379:6379

  redis-commander:
    image: rediscommander/redis-commander
    ports:
      - 8081:8081
    environment:
      - REDIS_HOSTS=local:redis:6379
    # networks:
    #   - back-tier

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - "db-data:/var/lib/postgreslq/data"
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: :/healthchecks/postgres.sh
      interval: 5s
    ports:
      - 5432:5432
    expose:
      - 5432

    # networks:
    #   - back-tier

volumes:
  db-data:

networks:
  front-tier:
  back-tier: